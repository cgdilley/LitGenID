import csv
import matplotlib.pyplot as plt

"""
PLOT.PY
Reads data in the word index and counts generated by EMBED.PY, and produces relevant plots based
on the data contained therein.
"""

# Rank to show cutoff point at in rank-volume plot
RANK_THRESHOLD = 1200

data1 = dict()
data2 = dict()

# Read rank and and count info from index file, and store as 'data1'
with open("./Corpus/PROCESSED/index.txt") as f:
    csv_in = csv.reader(f)

    for row in csv_in:
        if row[0] != "WORD":
            data1[int(row[1])] = int(row[2])


total_tokens = sum(data1.values())

print("Total tokens = %d" % total_tokens)
print("Token types = %d" % len(data1))


# Create the rank-volume data by iterating over data1, keeping track of a running sum, and storing
# in 'data2'.
runningSum = 0
for index, count in data1.items():
    runningSum += count

    data2[index] = runningSum / total_tokens

# Create rank-frequency plot
plt.figure(1)
plt.plot(list(data1.keys()), list(data1.values()))
plt.yscale("log")
plt.xscale("log")
plt.title("Rank-Frequency Distribution (Log-scaled)")
plt.ylabel("Frequency of Token")
plt.xlabel("Rank of Token")

# Create rank-volume plot
plt.figure(3)
plt.plot(list(data2.keys()), list(data2.values()), "b",
         [RANK_THRESHOLD, RANK_THRESHOLD],
         [0, data2[RANK_THRESHOLD]], "g",
         [RANK_THRESHOLD],
         [data2[RANK_THRESHOLD]],
         "go")
plt.title("Percentage of Tokens at Rank or Above (Log-scaled)")
plt.xscale("log")
plt.xlabel("Rank of Token")
plt.ylabel("Percentage of Words")
plt.grid(True)
plt.annotate("    Threshold:\n {0:.2f}% of tokens removed".format(data2[RANK_THRESHOLD] * 100),
             xy=(RANK_THRESHOLD, data2[RANK_THRESHOLD]),
             xytext=(RANK_THRESHOLD*3, data2[RANK_THRESHOLD]*0.9),
             arrowprops=dict(facecolor="black", shrink=0.05))



plt.show()
